// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: get_questions_for_submission.sql

package queries

import (
	"context"
)

const getSubmissionQuestions = `-- name: GetSubmissionQuestions :many
select
    jury_question_id,
    question
from project.jury_question as jury_question
where
    jury_question.submission_id = $1
    and jury_question.is_draft = false
`

type GetSubmissionQuestionsRow struct {
	JuryQuestionID int32
	Question       string
}

func (q *Queries) GetSubmissionQuestions(ctx context.Context, submissionID int32) ([]GetSubmissionQuestionsRow, error) {
	rows, err := q.db.Query(ctx, getSubmissionQuestions, submissionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetSubmissionQuestionsRow
	for rows.Next() {
		var i GetSubmissionQuestionsRow
		if err := rows.Scan(&i.JuryQuestionID, &i.Question); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
