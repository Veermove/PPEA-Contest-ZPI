// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: get_answers_for_question.sql

package queries

import (
	"context"
	"database/sql"
)

const getAnswersForQuestion = `-- name: GetAnswersForQuestion :many
select
    assessors_answer.answer as "answer",
    assessors_answer.files  as "files"
from project.assessors_answer as assessors_answer
where assessors_answer.jury_question_id = $1
`

type GetAnswersForQuestionRow struct {
	Answer sql.NullString
	Files  sql.NullString
}

func (q *Queries) GetAnswersForQuestion(ctx context.Context, juryQuestionID int32) ([]GetAnswersForQuestionRow, error) {
	rows, err := q.db.Query(ctx, getAnswersForQuestion, juryQuestionID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAnswersForQuestionRow
	for rows.Next() {
		var i GetAnswersForQuestionRow
		if err := rows.Scan(&i.Answer, &i.Files); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
