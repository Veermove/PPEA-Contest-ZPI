// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: check_access_assessor_rating.sql

package queries

import (
	"context"
)

const doesAssessorHaveAccessToRating = `-- name: DoesAssessorHaveAccessToRating :one
select (
    $2::integer in (
        select rating_id
            from project.rating as rating
            inner join project.assessor_submission as assessor_submission
                on assessor_submission.submission_id = rating.submission_id
            where assessor_submission.assessor_id = $1
    )
)::boolean
`

type DoesAssessorHaveAccessToRatingParams struct {
	AssessorID int32
	RatingID   int32
}

func (q *Queries) DoesAssessorHaveAccessToRating(ctx context.Context, arg DoesAssessorHaveAccessToRatingParams) (bool, error) {
	row := q.db.QueryRow(ctx, doesAssessorHaveAccessToRating, arg.AssessorID, arg.RatingID)
	var column_1 bool
	err := row.Scan(&column_1)
	return column_1, err
}
