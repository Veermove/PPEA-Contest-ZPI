// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: data_store.proto

package data_store

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectState int32

const (
	ProjectState_DRAFT     ProjectState = 0
	ProjectState_SUBMITTED ProjectState = 1
	ProjectState_ACCEPTED  ProjectState = 2
	ProjectState_REJECTED  ProjectState = 3
)

// Enum value maps for ProjectState.
var (
	ProjectState_name = map[int32]string{
		0: "DRAFT",
		1: "SUBMITTED",
		2: "ACCEPTED",
		3: "REJECTED",
	}
	ProjectState_value = map[string]int32{
		"DRAFT":     0,
		"SUBMITTED": 1,
		"ACCEPTED":  2,
		"REJECTED":  3,
	}
)

func (x ProjectState) Enum() *ProjectState {
	p := new(ProjectState)
	*p = x
	return p
}

func (x ProjectState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectState) Descriptor() protoreflect.EnumDescriptor {
	return file_data_store_proto_enumTypes[0].Descriptor()
}

func (ProjectState) Type() protoreflect.EnumType {
	return &file_data_store_proto_enumTypes[0]
}

func (x ProjectState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectState.Descriptor instead.
func (ProjectState) EnumDescriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{0}
}

type RatingType int32

const (
	RatingType_INDIVIDUAL RatingType = 0
	RatingType_INITIAL    RatingType = 1
	RatingType_FINAL      RatingType = 2
)

// Enum value maps for RatingType.
var (
	RatingType_name = map[int32]string{
		0: "INDIVIDUAL",
		1: "INITIAL",
		2: "FINAL",
	}
	RatingType_value = map[string]int32{
		"INDIVIDUAL": 0,
		"INITIAL":    1,
		"FINAL":      2,
	}
)

func (x RatingType) Enum() *RatingType {
	p := new(RatingType)
	*p = x
	return p
}

func (x RatingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RatingType) Descriptor() protoreflect.EnumDescriptor {
	return file_data_store_proto_enumTypes[1].Descriptor()
}

func (RatingType) Type() protoreflect.EnumType {
	return &file_data_store_proto_enumTypes[1]
}

func (x RatingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RatingType.Descriptor instead.
func (RatingType) EnumDescriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{1}
}

type SubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessorId int32 `protobuf:"varint,1,opt,name=assessor_id,json=assessorId,proto3" json:"assessor_id,omitempty"`
}

func (x *SubmissionRequest) Reset() {
	*x = SubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest) ProtoMessage() {}

func (x *SubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmissionRequest) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{0}
}

func (x *SubmissionRequest) GetAssessorId() int32 {
	if x != nil {
		return x.AssessorId
	}
	return 0
}

type DetailsSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId int32 `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *DetailsSubmissionRequest) Reset() {
	*x = DetailsSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsSubmissionRequest) ProtoMessage() {}

func (x *DetailsSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsSubmissionRequest.ProtoReflect.Descriptor instead.
func (*DetailsSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{1}
}

func (x *DetailsSubmissionRequest) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

type RatingsSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId int32 `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *RatingsSubmissionRequest) Reset() {
	*x = RatingsSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingsSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingsSubmissionRequest) ProtoMessage() {}

func (x *RatingsSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingsSubmissionRequest.ProtoReflect.Descriptor instead.
func (*RatingsSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{2}
}

func (x *RatingsSubmissionRequest) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{3}
}

func (x *UserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SubmissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions []*Submission `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
}

func (x *SubmissionsResponse) Reset() {
	*x = SubmissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionsResponse) ProtoMessage() {}

func (x *SubmissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionsResponse.ProtoReflect.Descriptor instead.
func (*SubmissionsResponse) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{4}
}

func (x *SubmissionsResponse) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type UserClaims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName              string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName               string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	AssessorId             int32  `protobuf:"varint,3,opt,name=assessor_id,json=assessorId,proto3" json:"assessor_id,omitempty"`
	PersonId               int32  `protobuf:"varint,4,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	AwardsRepresentativeId int32  `protobuf:"varint,5,opt,name=awards_representative_id,json=awardsRepresentativeId,proto3" json:"awards_representative_id,omitempty"`
	JuryMemberId           int32  `protobuf:"varint,6,opt,name=jury_member_id,json=juryMemberId,proto3" json:"jury_member_id,omitempty"`
	IpmaExpertId           int32  `protobuf:"varint,7,opt,name=ipma_expert_id,json=ipmaExpertId,proto3" json:"ipma_expert_id,omitempty"`
	ApplicantId            int32  `protobuf:"varint,8,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
}

func (x *UserClaims) Reset() {
	*x = UserClaims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserClaims) ProtoMessage() {}

func (x *UserClaims) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserClaims.ProtoReflect.Descriptor instead.
func (*UserClaims) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{5}
}

func (x *UserClaims) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserClaims) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserClaims) GetAssessorId() int32 {
	if x != nil {
		return x.AssessorId
	}
	return 0
}

func (x *UserClaims) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UserClaims) GetAwardsRepresentativeId() int32 {
	if x != nil {
		return x.AwardsRepresentativeId
	}
	return 0
}

func (x *UserClaims) GetJuryMemberId() int32 {
	if x != nil {
		return x.JuryMemberId
	}
	return 0
}

func (x *UserClaims) GetIpmaExpertId() int32 {
	if x != nil {
		return x.IpmaExpertId
	}
	return 0
}

func (x *UserClaims) GetApplicantId() int32 {
	if x != nil {
		return x.ApplicantId
	}
	return 0
}

type Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId int32       `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Year         int32       `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Name         string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DurationDays int32       `protobuf:"varint,4,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
	Assessors    []*Assessor `protobuf:"bytes,5,rep,name=assessors,proto3" json:"assessors,omitempty"`
	Ratings      []*Rating   `protobuf:"bytes,6,rep,name=ratings,proto3" json:"ratings,omitempty"`
}

func (x *Submission) Reset() {
	*x = Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{6}
}

func (x *Submission) GetSubmissionId() int32 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

func (x *Submission) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Submission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Submission) GetDurationDays() int32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *Submission) GetAssessors() []*Assessor {
	if x != nil {
		return x.Assessors
	}
	return nil
}

func (x *Submission) GetRatings() []*Rating {
	if x != nil {
		return x.Ratings
	}
	return nil
}

type Assessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	AssessorId int32  `protobuf:"varint,3,opt,name=assessor_id,json=assessorId,proto3" json:"assessor_id,omitempty"`
}

func (x *Assessor) Reset() {
	*x = Assessor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assessor) ProtoMessage() {}

func (x *Assessor) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assessor.ProtoReflect.Descriptor instead.
func (*Assessor) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{7}
}

func (x *Assessor) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Assessor) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Assessor) GetAssessorId() int32 {
	if x != nil {
		return x.AssessorId
	}
	return 0
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RatingId   int32      `protobuf:"varint,1,opt,name=rating_id,json=ratingId,proto3" json:"rating_id,omitempty"`
	IsDraft    bool       `protobuf:"varint,2,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	AssessorId int32      `protobuf:"varint,3,opt,name=assessor_id,json=assessorId,proto3" json:"assessor_id,omitempty"`
	Type       RatingType `protobuf:"varint,4,opt,name=type,proto3,enum=data_store.RatingType" json:"type,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{8}
}

func (x *Rating) GetRatingId() int32 {
	if x != nil {
		return x.RatingId
	}
	return 0
}

func (x *Rating) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *Rating) GetAssessorId() int32 {
	if x != nil {
		return x.AssessorId
	}
	return 0
}

func (x *Rating) GetType() RatingType {
	if x != nil {
		return x.Type
	}
	return RatingType_INDIVIDUAL
}

type DetailsSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamSize    int32        `protobuf:"varint,1,opt,name=team_size,json=teamSize,proto3" json:"team_size,omitempty"`
	FinishDate  string       `protobuf:"bytes,2,opt,name=finish_date,json=finishDate,proto3" json:"finish_date,omitempty"`
	Status      ProjectState `protobuf:"varint,3,opt,name=status,proto3,enum=data_store.ProjectState" json:"status,omitempty"`
	Budget      string       `protobuf:"bytes,4,opt,name=budget,proto3" json:"budget,omitempty"`
	Description string       `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Report      *AppReport   `protobuf:"bytes,6,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *DetailsSubmissionResponse) Reset() {
	*x = DetailsSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsSubmissionResponse) ProtoMessage() {}

func (x *DetailsSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsSubmissionResponse.ProtoReflect.Descriptor instead.
func (*DetailsSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{9}
}

func (x *DetailsSubmissionResponse) GetTeamSize() int32 {
	if x != nil {
		return x.TeamSize
	}
	return 0
}

func (x *DetailsSubmissionResponse) GetFinishDate() string {
	if x != nil {
		return x.FinishDate
	}
	return ""
}

func (x *DetailsSubmissionResponse) GetStatus() ProjectState {
	if x != nil {
		return x.Status
	}
	return ProjectState_DRAFT
}

func (x *DetailsSubmissionResponse) GetBudget() string {
	if x != nil {
		return x.Budget
	}
	return ""
}

func (x *DetailsSubmissionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DetailsSubmissionResponse) GetReport() *AppReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type AppReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDraft               bool   `protobuf:"varint,1,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	ReportSubmissionDate  string `protobuf:"bytes,2,opt,name=report_submission_date,json=reportSubmissionDate,proto3" json:"report_submission_date,omitempty"`
	ProjectGoals          string `protobuf:"bytes,3,opt,name=project_goals,json=projectGoals,proto3" json:"project_goals,omitempty"`
	OrganisationStructure string `protobuf:"bytes,4,opt,name=organisation_structure,json=organisationStructure,proto3" json:"organisation_structure,omitempty"`
	DivisionOfWork        string `protobuf:"bytes,5,opt,name=division_of_work,json=divisionOfWork,proto3" json:"division_of_work,omitempty"`
	ProjectSchedule       string `protobuf:"bytes,6,opt,name=project_schedule,json=projectSchedule,proto3" json:"project_schedule,omitempty"`
	Attatchments          string `protobuf:"bytes,7,opt,name=attatchments,proto3" json:"attatchments,omitempty"`
}

func (x *AppReport) Reset() {
	*x = AppReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppReport) ProtoMessage() {}

func (x *AppReport) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppReport.ProtoReflect.Descriptor instead.
func (*AppReport) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{10}
}

func (x *AppReport) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *AppReport) GetReportSubmissionDate() string {
	if x != nil {
		return x.ReportSubmissionDate
	}
	return ""
}

func (x *AppReport) GetProjectGoals() string {
	if x != nil {
		return x.ProjectGoals
	}
	return ""
}

func (x *AppReport) GetOrganisationStructure() string {
	if x != nil {
		return x.OrganisationStructure
	}
	return ""
}

func (x *AppReport) GetDivisionOfWork() string {
	if x != nil {
		return x.DivisionOfWork
	}
	return ""
}

func (x *AppReport) GetProjectSchedule() string {
	if x != nil {
		return x.ProjectSchedule
	}
	return ""
}

func (x *AppReport) GetAttatchments() string {
	if x != nil {
		return x.Attatchments
	}
	return ""
}

type Criterion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CriterionId int32  `protobuf:"varint,1,opt,name=criterion_id,json=criterionId,proto3" json:"criterion_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Area        string `protobuf:"bytes,4,opt,name=area,proto3" json:"area,omitempty"`
	Criteria    string `protobuf:"bytes,5,opt,name=criteria,proto3" json:"criteria,omitempty"`
	Subcriteria string `protobuf:"bytes,6,opt,name=subcriteria,proto3" json:"subcriteria,omitempty"`
}

func (x *Criterion) Reset() {
	*x = Criterion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Criterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criterion) ProtoMessage() {}

func (x *Criterion) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criterion.ProtoReflect.Descriptor instead.
func (*Criterion) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{11}
}

func (x *Criterion) GetCriterionId() int32 {
	if x != nil {
		return x.CriterionId
	}
	return 0
}

func (x *Criterion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Criterion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Criterion) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Criterion) GetCriteria() string {
	if x != nil {
		return x.Criteria
	}
	return ""
}

func (x *Criterion) GetSubcriteria() string {
	if x != nil {
		return x.Subcriteria
	}
	return ""
}

type PartialRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartialRatingId int32  `protobuf:"varint,1,opt,name=partial_rating_id,json=partialRatingId,proto3" json:"partial_rating_id,omitempty"`
	CriterionId     int32  `protobuf:"varint,2,opt,name=criterion_id,json=criterionId,proto3" json:"criterion_id,omitempty"`
	Points          int32  `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
	Justification   string `protobuf:"bytes,4,opt,name=justification,proto3" json:"justification,omitempty"`
	Modified        string `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	ModifiedBy      int32  `protobuf:"varint,6,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
}

func (x *PartialRating) Reset() {
	*x = PartialRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialRating) ProtoMessage() {}

func (x *PartialRating) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialRating.ProtoReflect.Descriptor instead.
func (*PartialRating) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{12}
}

func (x *PartialRating) GetPartialRatingId() int32 {
	if x != nil {
		return x.PartialRatingId
	}
	return 0
}

func (x *PartialRating) GetCriterionId() int32 {
	if x != nil {
		return x.CriterionId
	}
	return 0
}

func (x *PartialRating) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *PartialRating) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

func (x *PartialRating) GetModified() string {
	if x != nil {
		return x.Modified
	}
	return ""
}

func (x *PartialRating) GetModifiedBy() int32 {
	if x != nil {
		return x.ModifiedBy
	}
	return 0
}

type AssessorRatings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssessorId     int32            `protobuf:"varint,1,opt,name=assessor_id,json=assessorId,proto3" json:"assessor_id,omitempty"`
	FirstName      string           `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string           `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PartialRatings []*PartialRating `protobuf:"bytes,4,rep,name=partial_ratings,json=partialRatings,proto3" json:"partial_ratings,omitempty"`
}

func (x *AssessorRatings) Reset() {
	*x = AssessorRatings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssessorRatings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessorRatings) ProtoMessage() {}

func (x *AssessorRatings) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessorRatings.ProtoReflect.Descriptor instead.
func (*AssessorRatings) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{13}
}

func (x *AssessorRatings) GetAssessorId() int32 {
	if x != nil {
		return x.AssessorId
	}
	return 0
}

func (x *AssessorRatings) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AssessorRatings) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AssessorRatings) GetPartialRatings() []*PartialRating {
	if x != nil {
		return x.PartialRatings
	}
	return nil
}

type RatingsSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria   []*Criterion       `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	Individual []*AssessorRatings `protobuf:"bytes,2,rep,name=individual,proto3" json:"individual,omitempty"`
	Initial    *AssessorRatings   `protobuf:"bytes,3,opt,name=initial,proto3" json:"initial,omitempty"`
	Final      *AssessorRatings   `protobuf:"bytes,4,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *RatingsSubmissionResponse) Reset() {
	*x = RatingsSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_store_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingsSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingsSubmissionResponse) ProtoMessage() {}

func (x *RatingsSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_store_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingsSubmissionResponse.ProtoReflect.Descriptor instead.
func (*RatingsSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_data_store_proto_rawDescGZIP(), []int{14}
}

func (x *RatingsSubmissionResponse) GetCriteria() []*Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *RatingsSubmissionResponse) GetIndividual() []*AssessorRatings {
	if x != nil {
		return x.Individual
	}
	return nil
}

func (x *RatingsSubmissionResponse) GetInitial() *AssessorRatings {
	if x != nil {
		return x.Initial
	}
	return nil
}

func (x *RatingsSubmissionResponse) GetFinal() *AssessorRatings {
	if x != nil {
		return x.Final
	}
	return nil
}

var File_data_store_proto protoreflect.FileDescriptor

var file_data_store_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x34,
	0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x18, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4f, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaf, 0x02, 0x0a,
	0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x6a, 0x75, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6a, 0x75, 0x72, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x70, 0x6d, 0x61, 0x5f, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69,
	0x70, 0x6d, 0x61, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe0,
	0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12,
	0x32, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x67, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x19, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xb1, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x6f, 0x61, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x62, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xd9,
	0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x41,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xf5, 0x01, 0x0a, 0x19, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x3b, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x12, 0x35, 0x0a,
	0x07, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x2a, 0x44, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x34, 0x0a,
	0x0a, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x4e, 0x41,
	0x4c, 0x10, 0x02, 0x32, 0xf1, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36, 0x42, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x65, 0x72, 0x6d, 0x6f, 0x76, 0x65,
	0x2f, 0x7a, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_store_proto_rawDescOnce sync.Once
	file_data_store_proto_rawDescData = file_data_store_proto_rawDesc
)

func file_data_store_proto_rawDescGZIP() []byte {
	file_data_store_proto_rawDescOnce.Do(func() {
		file_data_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_store_proto_rawDescData)
	})
	return file_data_store_proto_rawDescData
}

var file_data_store_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_data_store_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_data_store_proto_goTypes = []interface{}{
	(ProjectState)(0),                 // 0: data_store.ProjectState
	(RatingType)(0),                   // 1: data_store.RatingType
	(*SubmissionRequest)(nil),         // 2: data_store.SubmissionRequest
	(*DetailsSubmissionRequest)(nil),  // 3: data_store.DetailsSubmissionRequest
	(*RatingsSubmissionRequest)(nil),  // 4: data_store.RatingsSubmissionRequest
	(*UserRequest)(nil),               // 5: data_store.UserRequest
	(*SubmissionsResponse)(nil),       // 6: data_store.SubmissionsResponse
	(*UserClaims)(nil),                // 7: data_store.UserClaims
	(*Submission)(nil),                // 8: data_store.Submission
	(*Assessor)(nil),                  // 9: data_store.Assessor
	(*Rating)(nil),                    // 10: data_store.Rating
	(*DetailsSubmissionResponse)(nil), // 11: data_store.DetailsSubmissionResponse
	(*AppReport)(nil),                 // 12: data_store.AppReport
	(*Criterion)(nil),                 // 13: data_store.Criterion
	(*PartialRating)(nil),             // 14: data_store.PartialRating
	(*AssessorRatings)(nil),           // 15: data_store.AssessorRatings
	(*RatingsSubmissionResponse)(nil), // 16: data_store.RatingsSubmissionResponse
}
var file_data_store_proto_depIdxs = []int32{
	8,  // 0: data_store.SubmissionsResponse.submissions:type_name -> data_store.Submission
	9,  // 1: data_store.Submission.assessors:type_name -> data_store.Assessor
	10, // 2: data_store.Submission.ratings:type_name -> data_store.Rating
	1,  // 3: data_store.Rating.type:type_name -> data_store.RatingType
	0,  // 4: data_store.DetailsSubmissionResponse.status:type_name -> data_store.ProjectState
	12, // 5: data_store.DetailsSubmissionResponse.report:type_name -> data_store.AppReport
	14, // 6: data_store.AssessorRatings.partial_ratings:type_name -> data_store.PartialRating
	13, // 7: data_store.RatingsSubmissionResponse.criteria:type_name -> data_store.Criterion
	15, // 8: data_store.RatingsSubmissionResponse.individual:type_name -> data_store.AssessorRatings
	15, // 9: data_store.RatingsSubmissionResponse.initial:type_name -> data_store.AssessorRatings
	15, // 10: data_store.RatingsSubmissionResponse.final:type_name -> data_store.AssessorRatings
	5,  // 11: data_store.DataStore.GetUserClaims:input_type -> data_store.UserRequest
	2,  // 12: data_store.DataStore.GetSubmissions:input_type -> data_store.SubmissionRequest
	3,  // 13: data_store.DataStore.GetSubmissionDetails:input_type -> data_store.DetailsSubmissionRequest
	4,  // 14: data_store.DataStore.GetSubmissionRatings:input_type -> data_store.RatingsSubmissionRequest
	7,  // 15: data_store.DataStore.GetUserClaims:output_type -> data_store.UserClaims
	6,  // 16: data_store.DataStore.GetSubmissions:output_type -> data_store.SubmissionsResponse
	11, // 17: data_store.DataStore.GetSubmissionDetails:output_type -> data_store.DetailsSubmissionResponse
	16, // 18: data_store.DataStore.GetSubmissionRatings:output_type -> data_store.RatingsSubmissionResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_data_store_proto_init() }
func file_data_store_proto_init() {
	if File_data_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingsSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserClaims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assessor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Criterion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssessorRatings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_store_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingsSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_store_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_store_proto_goTypes,
		DependencyIndexes: file_data_store_proto_depIdxs,
		EnumInfos:         file_data_store_proto_enumTypes,
		MessageInfos:      file_data_store_proto_msgTypes,
	}.Build()
	File_data_store_proto = out.File
	file_data_store_proto_rawDesc = nil
	file_data_store_proto_goTypes = nil
	file_data_store_proto_depIdxs = nil
}
