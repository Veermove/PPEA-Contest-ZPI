syntax = "proto3";

package data_store;

option java_multiple_files = true;
option java_outer_classname = "DataStoreProto";
option go_package = "github.com/Veermove/zpi/data-store";

enum ProjectState {
    DRAFT               = 0;
    SUBMITTED           = 1;
    ACCEPTED            = 2;
    ACCEPTED_INDIVIDUAL = 3;
    ACCEPTED_INITIAL    = 4;
    ACCEPTED_FINAL      = 5;
    REJECTED            = 6;
}

enum RatingType {
    INDIVIDUAL = 0;
    INITIAL    = 1;
    FINAL      = 2;
}

message SubmissionRequest {
    int32 assessor_id = 1;
}

message DetailsSubmissionRequest {
    int32 submission_id = 1;
    int32 assessor_id   = 2;
}

message RatingsSubmissionRequest {
    int32 submission_id = 1;
    int32 assessor_id   = 2;
}

message UserRequest {
    string email = 1;
}

message SubmissionsResponse {
    repeated Submission submissions = 1;
}

message Submission {
    int32  submission_id = 1;
    int32  year          = 2;
    string name          = 3;
    int32  duration_days = 4;

    repeated Assessor assessors = 5;
    repeated Rating   ratings = 6;
}

message Assessor {
    string first_name  = 1;
    string last_name   = 2;
    int32  assessor_id = 3;
}

message Rating {
    int32      rating_id = 1;
    bool       is_draft = 2;
    int32      assessor_id = 3;
    RatingType type = 4;
}

message DetailsSubmissionResponse {
    int32        team_size   = 1;
    string       finish_date = 2;
    ProjectState status      = 3;
    string       budget      = 4;
    string       description = 5;
    AppReport    report      = 6;
    double       points      = 7;
}

message AppReport {
    bool is_draft                 = 1;
    string report_submission_date = 2;
    string project_goals          = 3;
    string organisation_structure = 4;
    string division_of_work       = 5;
    string project_schedule       = 6;
    string attachments            = 7;
}

message Criterion {
    int32 criterion_id = 1;
    string name        = 2;
    string description = 3;
    string area        = 4;
    string criteria    = 5;
    string subcriteria = 6;
}

message PartialRating {
    int32  partial_rating_id = 1;
    int32  criterion_id      = 2;
    int32  points            = 3;
    string justification     = 4;

    string modified          = 5;
    int32  modified_by       = 6;
}

message AssessorRatings {
    int32 assessor_id = 1;
    string first_name = 2;
    string last_name  = 3;
    bool is_draft     = 4;
    repeated PartialRating partial_ratings = 5;
    int32 rating_id   = 6;
}

message RatingsSubmissionResponse {
    repeated Criterion criteria = 1;

    repeated AssessorRatings individual = 2;
    AssessorRatings initial    = 3;
    AssessorRatings final      = 4;
}

message UserClaimsResponse {
    string first_name               = 1;
    string last_name                = 2;
    int32  person_id                = 4;
    int32  assessor_id              = 3;
    int32  awards_representative_id = 5;
    int32  jury_member_id           = 6;
    int32  ipma_expert_id           = 7;
    int32  applicant_id             = 8;
}

message NewSubmissionRatingRequest {
    int32 assessor_id   = 1;
    int32 submission_id = 2;
    RatingType type     = 3;
}

message PartialRatingRequest {
    int32 assessor_id       = 1;
    int32 criterion_id      = 2;
    int32 rating_id         = 3;
    int32 partial_rating_id = 4;
    string justification    = 5;
    int32 points            = 6;

    string _modified        = 7;
}

message PostPartialRatingResponse {
    oneof response {
        string error = 1;  // This is used ONLY for race condition errors
        PartialRating partial_rating = 2;
    }
}

message SubmitRatingDraft {
    int32 assessor_id = 1;
    int32 rating_id = 2;
}

message Answer {
    string answer_text = 1;
    repeated string files = 2;
}

message Question {
    string content = 1;
    repeated Answer answers = 2;
}

message StudyVisitResponse {
    repeated Question questions = 1;
}

message StudyVisitRequest {
    int32 assessor_id = 1;
    int32 submission_id = 2;
}

message EmailDetails {
    string assessor_first_name  = 1;
    string assessor_last_name   = 2;
    string assessor_email       = 3;
    string submission_name      = 4;
    bool is_rating_created      = 5;
    RatingType rating_type      = 6;
    int32 edition_year          = 7;
    string rating_submit_date   = 8;
    bool isFirstWarning         = 9;
}

message EmailResponse {
    repeated EmailDetails emails = 1;
}

message EmailRequest {}

message Confirmation  {
    int32 assessor_id = 1;
    int32 submission_id = 2;
    RatingType rating_type = 3;
}

message ConfirmationRequest {
    repeated Confirmation confirmations = 1;
}

message ConfirmationResponse {
    bool error = 1;
}

service DataStore {
    rpc GetUserClaims           (UserRequest)                 returns (UserClaimsResponse)        {}
    rpc GetSubmissions          (SubmissionRequest)           returns (SubmissionsResponse)       {}
    rpc GetSubmissionDetails    (DetailsSubmissionRequest)    returns (DetailsSubmissionResponse) {}
    rpc GetSubmissionRatings    (RatingsSubmissionRequest)    returns (RatingsSubmissionResponse) {}
    rpc GetStudyVisit           (StudyVisitRequest)           returns (StudyVisitResponse)        {}
    rpc PostNewSubmissionRating (NewSubmissionRatingRequest)  returns (Rating)                    {}
    rpc PostPartialRating       (PartialRatingRequest)        returns (PostPartialRatingResponse) {}
    rpc PostSubmitRating        (SubmitRatingDraft)           returns (Rating)                    {}
    rpc GetEmailDetails         (EmailRequest)                returns (EmailResponse)             {}
    rpc ConfirmEmailsSent       (ConfirmationRequest)         returns (ConfirmationResponse)      {}
}


